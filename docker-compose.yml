version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spam-filter-backend
    ports:
      - "8000:8000"
    volumes:
      - ./artifacts:/app/artifacts:ro # Mount artifacts as read-only
      - ./data:/app/data:ro # Mount data as read-only
      - backend-logs:/app/logs # Persist logs
    environment:
      - PYTHONUNBUFFERED=1
      - MODEL_NAME=intfloat/multilingual-e5-base
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8000,http://127.0.0.1:3000
      - FAISS_INDEX_PATH=/app/artifacts/faiss_index.bin
      - METADATA_PATH=/app/artifacts/train_metadata.json
      - CLASS_WEIGHTS_PATH=/app/artifacts/class_weights.json
      - CONFIG_PATH=/app/artifacts/model_config.json
      - LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - spam-filter-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:8000
    container_name: spam-filter-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - spam-filter-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  spam-filter-network:
    driver: bridge

volumes:
  backend-logs:
    driver: local
